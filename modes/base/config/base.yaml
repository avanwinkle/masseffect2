#config_version=5
mode:
  start_events: ball_starting
  stop_events: ball_will_end
  priority: 100

config:
  - base_debug.yaml
  - base_endsounds.yaml
  - base_medigel.yaml
  - base_shows.yaml

achievements:
  # SHADOW BROKER
  chase:
    enable_events: logicblock_sbdrops_counter_hit{count==3}
    start_events: mode_shadowbroker_chase_started
    stop_events: mode_shadowbroker_chase_will_stop
    complete_events: shadowbroker_chase_complete
    restart_on_next_ball_when_started: false
  vasir:
    enable_events: shadowbroker_chase_complete
    start_events: mode_shadowbroker_vasir_started
    stop_events: mode_shadowbroker_vasir_will_stop
    complete_events: shadowbroker_vasir_complete
    restart_on_next_ball_when_started: false
  hagalaz:
    enable_events: logicblock_sbdrops_counter_complete
    start_events: mode_shadowbroker_hagalaz_started
    stop_events: mode_shadowbroker_hagalaz_will_stop
    complete_events: enable_hatch # We don't have to hit the hatch, just opening it is enough
    restart_on_next_ball_when_started: false
  shadowbroker:
    enable_events: enable_hatch
    start_events: mode_shadowbroker_boss_started
    stop_events: mode_shadowbroker_boss_will_stop
    complete_events: shadowbroker_boss_complete
    restart_on_next_ball_when_started: false
  # MULTIBALLS
  overlord:
    start_events: mode_overlord_started
    stop_events: mode_overlord_stopped, mode_collectorship_base_started
    complete_events: overlord_complete
    restart_on_next_ball_when_started: false
  arrival:
    enable_events: mode_collectorship_base_started
    start_events: mode_arrival_started
    stop_events: mode_arrival_stopped
    complete_events: arrival_escapeshot_hit
    restart_on_next_ball_when_started: false
  # COLLECTOR MISSIONS
  collectorship:
    enable_events: enable_collectorship
    start_events: mode_collectorship_base_started
    # Allow replay of Collector Ship until (a) praetorian is beaten or (b) Derelict Reaper is available
    # That means we keep the achievement "started" because otherwise it can't "complete"
    complete_events:
      - collectorship_praetorian_complete
      - achievement_derelictreaper_state_enabled
    restart_on_next_ball_when_started: true
  derelictreaper:
    enable_events: enable_derelictreaper
    start_events: start_mode_derelictreaper
    # Allow replay of Derelict Reaper until (a) it's beaten or (b) the Normandy Attack occurs
    # That means we keep the achievement "started" because otherwise it can't "complete"
    complete_events:
      - derelictreaper_complete
      - achievement_normandyattack_state_started
    restart_on_next_ball_when_started: true
  normandyattack:
    enable_events: mode_derelictreaper_will_stop # Automatically enabled after derelict reaper
    start_events: mode_normandyattack_started
    complete_events: mode_normandyattack_will_stop # Only played once, completed after playing
    restart_on_next_ball_when_started: false
  # SUICIDE MISSION
  suicidemission:
    enable_events:
      - mode_normandyattack_started
      - reenable_suicidemission # After at least one tech and biotic are in the squad
    start_events: missionselect_suicide_selected
    # We "stop" on failure so we know to show the player they failed. That event triggers the disabling
    stop_events: suicidemission_failed
    disable_events: reset_from_suicide
    complete_events: suicidemission_complete
    restart_on_next_ball_when_started: true
  # TODO: restructure to avoid these achievements resetting each other on restore
  # New approach: never "start" a suicide phase achievement, just "select"
  omegarelay:
    enable_events: achievement_normandyattack_state_completed{device.achievements.omegarelay.state=="disabled"}
    reset_events: suicidemission_failed
    select_events: missionselect_suicide_selected
    complete_events: omegarelay_complete
  infiltration:
    enable_events: achievement_normandyattack_state_completed{device.achievements.infiltration.state=="disabled"}
    reset_events: suicidemission_failed
    select_events: omegarelay_complete
    complete_events: infiltration_complete
  longwalk:
    enable_events: achievement_normandyattack_state_completed{device.achievements.longwalk.state=="disabled"}
    reset_events: suicidemission_failed
    select_events: infiltration_complete
    complete_events: longwalk_complete
  tubes:
    enable_events: achievement_normandyattack_state_completed{device.achievements.tubes.state=="disabled"}
    reset_events: suicidemission_failed
    select_events: longwalk_complete
    complete_events: tubes_complete
  humanreaper:
    enable_events: achievement_normandyattack_state_completed{device.achievements.humanreaper.state=="disabled"}
    reset_events: suicidemission_failed
    select_events: tubes_complete
    complete_events: humanreaper_complete
  endrun:
    enable_events: achievement_normandyattack_state_completed{device.achievements.endrun.state=="disabled"}
    reset_events: suicidemission_failed
    select_events: humanreaper_complete
    complete_events: endrun_complete
  # SHIP UPGRADES
  upgrade_armor:
    complete_events: shipupgrade_completed
    debug: true
  upgrade_shields:
    complete_events: shipupgrade_completed
    debug: true
  upgrade_cannon:
    complete_events: shipupgrade_completed
    debug: true

achievement_groups:
  shipupgrades_group:
    achievements: upgrade_armor, upgrade_shields, upgrade_cannon
    select_random_achievement_events: shipupgrade_available
    events_when_all_completed: all_upgrades_complete
    debug: true

event_player:
  mode_base_started:
    - start_mode_global{device.achievements.suicidemission.state!="started"}
    - start_mode_suicide_base{device.achievements.suicidemission.state=="started"}
    - start_mode_lockhandler
    - start_mode_environment
    - enable_orbitswitches
    - flippers_on
    - reset_missionselect_bypass
    - dynamic_state_suicidemission_is_(device.achievements.suicidemission.state)
    - dynamic_player_balls_are_(current_player.balls_played)
    - dynamic_score_is_("high" if current_player.score > 10000 else "low")
  mode_base_started.2:
    dynamic_args_inline: { foo: "bar" }
    dynamic_args_expanded:
      bat: shirt
  mode_base_will_stop:
    - stop_mode_global
    - stop_mode_lockhandler
    - stop_mode_environment
    - stop_wizards
    - flippers_off
  mode_type_wizard_started:
    - stop_mode_global
  mode_type_wizard_stopped{not mode.base.stopping}:
    - start_mode_global
  # If a new mission becomes available, remove the player-selected bypass
  player_available_missions{change>0}:
    - reset_missionselect_bypass
  # When we have 6 squadmates (aka 4 recruits completed), go to collector ship
  player_squadmates_count{value==6}:
    - enable_collectorship
  missionselect_collectorship_selected:
    - start_mode_collectorship_base
  # When we have reached level 8, go to derelict reaper. This can be from
  # completing 7 recruits, or fewer recruits plus other mission levelups. It's
  # important to track how many levels are possible to avoid enabling derelict
  # reaper _before_ collectorship. Since collectorship requires 4 recruits and
  # derelict reaper requires 7 levelups, only three levelups should be allowed
  # before collectorship: Overlord, Shadowbroker Vasir, and Shadowbroker Boss
  player_level:
    - enable_derelictreaper{value==8}
    # Every three levels warrants a ship upgrade!
    - shipupgrade_available{value%3==0 and device.achievement_groups.shipupgrades_group.enabled}
    - reset_missionselect_bypass
  missionselect_derelictreaper_selected:
    - start_mode_derelictreaper
  missionselect_suicide_selected:
    - start_mode_suicide_base
  fullorbit_enter_hit:
    - enable_gates
    - disable_orbitswitches
    - disable_gates|900ms
    - enable_orbitswitches|1200ms  # Tried 900 but got false positives on longwalk, increasing to 1100 (min +40)
                                   # Tried 1100 but came up 2ms shy on Kasumi, increasing to 1200
  # From an auto-plunger launch, open the gates and disable the switches
  # TODO: don't open the gates during multiball, to keep left orbit open for shots
  fullorbit_fromplunger_hit:
    - enable_gates
    - disable_orbitswitches
    - disable_gates|1500ms
    - enable_orbitswitches|2000ms
  # From a plunger launch, disable orbit switches to avoid cheat-easy hits
  s_plunger_lane_inactive:
    - disable_orbitswitches
    - enable_orbitswitches|2000ms
  # From a plunger orbit launch, re-enable orbit switches once left orbit is hit
  fullorbit_complete_hit:
    - enable_orbitswitches|200ms

ball_saves:
  default:
    active_time: 20s
    grace_period: 2s
    hurry_up_time: 5s
    enable_events:
      - mode_base_started
    timer_start_events:
      - balldevice_bd_plunger_ball_eject_success
    disable_events:
      - ball_will_end
      - ball_save_recruitsave_enabled # Only allow one active save at a time
      - start_mode_normandyattack # We want the ball to drain when the attack starts
      - start_mode_suicide_base # Suicide mission plays by its own rules
    auto_launch: true
    balls_to_save: 1
    early_ball_save_events: s_outlane_left_active, s_outlane_right_active

extra_balls:
  omegarelay_extraball:
    award_events: omegarelay_shots_hit_complete

counters:
  # Vasir and Hagalaz are wizard modes, so global_shadowbroker misses their complete events
  sbdrops_counter:
    count_events:
      - drop_target_bank_dropbank_down
      # Mode global_shadowbroker will advance the counter after vasir
      - manual_sbdrops_counter_advance
    starting_count: current_player.counter_sbdrops_counter
    count_complete_value: 7
    persist_state: true
    disable_on_complete: false
    reset_on_complete: false
    enable_events:
      # Count is enabled if vasir and hagalaz are not enabled/stopped AND boss is disabled
      - enable_sbdrops_counter{device.achievements.chase.state!="enabled" and device.achievements.chase.state!="stopped" and device.achievements.vasir.state!="enabled" and device.achievements.vasir.state!="stopped" and device.achievements.hagalaz.state!="enabled" and device.achievements.hagalaz.state!="stopped" and device.achievements.shadowbroker.state=="disabled"}
    disable_events:
      - disable_sbdrops_counter
      - achievement_chase_state_enabled
      - achievement_vasir_state_enabled
      - achievement_hagalaz_state_enabled
      - achievement_shadowbroker_state_enabled

variable_player:
  levelup:
    level: 1
    # Reset the ship upgrade every levelup. Once missed, gone forever!
    shipupgrade_available:
      action: set
      int: 0
  # Use a variable to know whether a ship upgrade is available
  shipupgrade_available:
    available_shipupgrades: 1
  # Track the squadmates recruited _this game_, not ones imported from saves
  player_squadmates_count{change==1}:
    recruited_squadmates_count: 1
  # Use achievements to track available missions
  achievement_collectorship_state_enabled:
    available_missions: 1
  achievement_collectorship_state_started:
    available_missions: -1
  achievement_derelictreaper_state_enabled:
    available_missions: 1
  achievement_derelictreaper_state_started:
    available_missions: -1
  achievement_suicidemission_state_enabled:
    available_missions: 1
  reset_missionselect_bypass:
    bypass_missionselect:
      action: set
      int: 0
  # For save careers, how many balls has the player played in total?
  mode_base_started:
    balls_played: 1

shots:
# These "core" shots for the main shots
# This way, the mode-specific shots can always be enabled and show shows, but
# they won't trigger hits unless the underlying core shot is enabled. This allows
# us to use global methods of disabling core shots, e.g. ball save and full orbit,
# without having to duplicate the logic in modes or re-sync mode shot shows.
  sh_left_ramp:
    switch: s_left_ramp_exit
  sh_left_orbit:
    switch: s_left_orbit
    enable_events: enable_orbitswitches, enable_leftorbit
    disable_events: disable_orbitswitches
  sh_right_ramp:
    switch: s_right_ramp_exit
  sh_right_orbit:
    switch: s_right_orbit
    enable_events: enable_orbitswitches, enable_rightorbit
    disable_events: disable_orbitswitches
  sh_spinner:
    switch: s_spinner
    enable_events: enable_orbitswitches
    disable_events: disable_orbitswitches
  sh_kickback:
    switch: s_kickback
  sh_hitbank_top:
    switch: s_hitbank_top
  sh_hitbank_bottom:
    switch: s_hitbank_bottom
  sh_dropbank_top:
    switch: s_dropbank_top
  sh_dropbank_middle:
    switch: s_dropbank_middle
  sh_dropbank_bottom:
    switch: s_dropbank_bottom
  # Other commonly-used or commonly-behaving shots
  fullorbit_enter:
    switches: s_left_orbit, s_right_orbit
    enable_events: enable_fullorbit
    disable_events: disable_fullorbit
  fullorbit_fromplunger:
    hit_events: balldevice_bd_plunger_ejecting_ball
    enable_events: enable_fullorbit
    disable_events: disable_fullorbit
  # Re-enable orbit switches IMMEDIATELY if the ball moves from plunger to
  # left orbit, i.e. completes an orbit. It could be hit up to right orbit very
  # quickly, faster than the normal orbit timeout
  fullorbit_complete:
    switch: s_left_orbit
    enable_events: fullorbit_fromplunger_hit
    disable_events: enable_orbitswitches

sequence_shots:
  left_to_right_orbit:
    switch_sequence: s_spinner, s_left_orbit, s_right_orbit
    sequence_timeout: 800ms # How long to finish the orbit?
                            # How fast to fall down left orbit and get shot up?

show_player:
  ball_save_default_enabled:
    ball_save_preshow:
      action: play
  ball_save_default_timer_start:
    ball_save_preshow:
      action: stop
    ball_save_show:
      action: play
      speed: 3
      priority: 10
  ball_save_default_hurry_up:
    ball_save_show:
      action: play
      speed: 9
  ball_save_default_grace_period:
    ball_save_show:
      action: stop
  ball_save_default_disabled:
    ball_save_preshow:
      action: stop
    ball_save_show:
      action: stop
  logicblock_omegarelay_extraball_counter_complete:
    flash:
      key: extraball_lit_show
      show_tokens:
        leds: l_kickback_arrow_amber
  extra_ball_awarded:
    extraball_lit_show:
      action: stop
    on:
      key: extraball_awarded_show
      show_tokens:
        leds: l_ball_save
  mode_suicide_omegarelay_stopped:
    extraball_lit_show:
      action: stop
  player_extra_balls{value==0}:
    extraball_lit_show:
      action: stop

shows:
  ball_save_preshow:
    - lights:
        l_ball_save: on
  ball_save_show:
    - time: 0
      lights:
        l_ball_save:
          color: black
    - time: '+1'
      lights:
        l_ball_save:
          color: white
  flash_all_shields_show:
    - time: 0
      lights:
        l_left_orbit_shield_rgb: (color)
        l_left_ramp_shield_rgb: (color)
        l_kickback_shield_rgb: (color)
        l_right_ramp_shield_rgb: (color)
        l_right_orbit_shield_rgb: (color)
        l_dropbank_shield_rgb: (color)
        l_hitbank_shield_rgb: (color)
    - time: '+1'
      lights:
        l_left_orbit_shield_rgb: black
        l_left_ramp_shield_rgb: black
        l_kickback_shield_rgb: black
        l_right_ramp_shield_rgb: black
        l_right_orbit_shield_rgb: black
        l_dropbank_shield_rgb: black
        l_hitbank_shield_rgb: black
        l_null: (color)
    - time: '+1'
  flash_color_show:
    - time: 0
      lights:
        (leds): (color)
    - time: '+1'
      lights:
        (leds): black
        l_null: (color)
  flasher_show_single:
    - duration: 200ms
      flashers:
        (flashers): 120ms
    - duration: 10s
  flasher_show_double:
    - duration: 200ms
      flashers:
        (flashers): 120ms
    - duration: 200ms
      flashers:
        (flashers): 120ms
    - duration: 10s
  flasher_show_triple:
    - duration: 200ms
      flashers:
        (flashers): 120ms
    - duration: 200ms
      flashers:
        (flashers): 120ms
    - duration: 200ms
      flashers:
        (flashers): 120ms
    - duration: 10s
  color_on:
    - lights:
        (leds): (color)
  color_off:
    - lights:
        (leds): black
        l_null: (color)

slide_player:
  levelup:
    levelup_slide:
      expire: 4s
      priority: 1999      # Normandy attack runs at 2000
  n7_assignment_shot_hit:
    n7_complete_slide:
      priority: 600
      expire: 3s

slides:
  levelup_slide:
    widgets:
      - type: text
        text: LEVEL UP!
        font_size: 14
        style: dmd_big
        anchor_y: bottom
        y: 12
        z: 100
      - type: rectangle
        height: 32
        width: 128
        color: black
        z: 10
  n7_complete_slide:
    widgets:
      - type: text
        text: Assignment Complete!

sound_player:
  s_plunger_lane_inactive: galaxy_whoosh
  levelup:
    music_mission_success:
      action: play
      priority: 2 # Field music is 1, so this trumps only that
  # Whether starting a mission or game over, kill the "levelup" music if field stops
  mode_field_will_stop:
    music_mission_success:
      action: stop
      fade_out: 1s

sounds:
  galaxy_whoosh:
    file: sfxgame.Wwise_Generic_Galaxy_Map.gui_galaxy_whoosh_long.ogg
    track: sfx
  music_mission_success:
    file: mus_gui_mission_completion.ogg
    track: levelup # Use a special track to avoid music fadeout conflicts
    loop: 0
    fade_in: 500ms
    fade_out: 10s
    ducking:
      target: music
      delay: 1500ms
      attack: 1s
      attenuation: 0
      release_point: 18s
      release: 4s

track_player:
  # Bring the music out asap to allow for the bonus music to fade in
  ball_will_end:
    music:
      action: stop_all_sounds
      fade: 500ms
  # In case a mode has audio that wants to queue-block on ball_ending
  ball_ending:
    __all__:
      action: stop_all_sounds
      fade: 500ms

widget_player:
  levelup:
    levelup_mission:
      slide: levelup_slide

widgets:
  levelup_mission:
    - type: text
      text: (mission_name)
      style: dmd_small
      anchor_y: bottom
      y: 3
      z: 12
