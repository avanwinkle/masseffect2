#config_version=6
achievements:
  # MULTIBALLS
  overlord:
    start_events: mode_overlord_started
    stop_events: mode_overlord_stopped, mode_collectorship_base_started
    complete_events: overlord_complete
    restart_on_next_ball_when_started: false
  arrival:
    enable_events: mode_collectorship_base_started
    start_events: mode_arrival_started
    stop_events: mode_arrival_stopped
    complete_events: award_arrival_levelup
    restart_on_next_ball_when_started: false
  # MAIN STORY MISSIONS
  collectorship:
    enable_events: enable_collectorship
    start_events: mode_collectorship_base_started
    complete_events:
      - collectorship_praetorian_complete
      - mode_collectorship_base_will_stop
    restart_on_next_ball_when_started: true
  derelictreaper:
    enable_events: enable_derelictreaper
    start_events: start_mode_derelictreaper
    complete_events:
      - derelictreaper_complete
      - mode_derelictreaper_will_stop
    restart_on_next_ball_when_started: true
  normandyattack:
    enable_events: mode_derelictreaper_will_stop # Automatically enabled after derelict reaper
    start_events: mode_normandyattack_started
    complete_events: normandyattack_begin # Only played once, completed after playing
    restart_on_next_ball_when_started: false
  # This achievement tracks whether the Suicide Mission is being played or not, overall.
  # There is a state machine below to track where in the mission the player is.
  suicidemission:
    enable_events:
      - mode_normandyattack_started
      - reenable_suicidemission  # After at least one tech and biotic are in the squad
    start_events: missionselect_suicide_selected
    # We "stop" on failure so we know to show the player they failed. That event triggers the disabling
    stop_events: suicidemission_failed
    disable_events: reset_from_suicide
    complete_events: suicidemission_complete
    restart_on_next_ball_when_started: true

  # SHIP UPGRADES
  upgrade_armor:
    complete_events: shipupgrade_completed
  upgrade_shields:
    complete_events: shipupgrade_completed
  upgrade_cannon:
    complete_events: shipupgrade_completed

achievement_groups:
  shipupgrades_group:
    achievements: upgrade_armor, upgrade_shields, upgrade_cannon
    select_random_achievement_events: shipupgrade_available
    events_when_all_completed: all_upgrades_complete

state_machines:
  firewalker:
    persist_state: true
    starting_state: rosalie
    states:
      rosalie: {}
      volcano_station: {}
      geth_incursion: {}
      survey_sites: {}
      prothean_site: {}
      completed: {}
    transitions:
      # Can we use the same event to trigger _every_ state advancement?
      - source: rosalie
        target: survey_sites
        events: firewalker_mission_complete
      - source: survey_sites
        target: geth_incursion
        events: firewalker_mission_complete
      - source: geth_incursion
        target: volcano_station
        events: firewalker_mission_complete
      - source: volcano_station
        target: prothean_site
        events: firewalker_mission_complete
      - source: prothean_site
        target: completed
        events: firewalker_mission_complete

  shadowbroker:
    persist_state: true
    states:
      start:
        events_when_started: shadowbroker_progression_start_started
      chase:
        events_when_started: shadowbroker_progression_chase_started
      vasir:
        events_when_started: shadowbroker_progression_vasir_started
      pre_hagalaz:
        events_when_started: shadowbroker_progression_pre_hagalaz_started
      hagalaz:
        events_when_started: shadowbroker_progression_hagalaz_started
      boss:
        events_when_started: shadowbroker_progression_boss_started
      completed:
        events_when_started: shadowbroker_progression_completed
    transitions:
      - source: start
        target: chase
        events: logicblock_sbdrops_counter_hit{count==3}
      - source: chase
        target: vasir
        events: shadowbroker_chase_complete
      - source: vasir
        target: pre_hagalaz
        events: shadowbroker_vasir_complete
      - source: pre_hagalaz
        target: hagalaz
        events: logicblock_sbdrops_counter_complete
      - source: hagalaz
        target: boss
        events: enable_hatch
      - source: boss
        target: completed
        events: shadowbroker_boss_complete

  suicide_progress:
    persist_state: true
    states:
      start:
        events_when_started: suicide_progression_start
      ready:
        events_when_started: suicide_progression_ready
      # omegarelay:
      #   events_when_started: suicide_progression_omegarelay
      infiltration:
        events_when_started: suicide_progression_infiltration
      longwalk:
        events_when_started: suicide_progression_longwalk
      tubes:
        events_when_started: suicide_progression_tubes
      final:
        events_when_started: suicide_progression_final
      endrun:
        events_when_started: suicide_progression_endrun
      completed:
        events_when_started: suicide_progression_completed
      failed:
        events_when_started: suicide_progression_failed
    transitions:
      - source: start
        target: ready
        events: mode_normandyattack_started
      - source: ready
        target: infiltration  # omegarelay
        events: mode_suicide_omegarelay_started
      # - source: omegarelay
      #   target: infiltration
      #   events: omegarelay_complete
      - source: infiltration
        target: longwalk
        events: infiltration_complete
      - source: longwalk
        target: tubes
        events: longwalk_complete
      # Move straight from tubes to final, no replay of tubes
      - source: tubes
        target: final
        events: mode_suicide_tubes_started
      - source: final
        target: endrun
        events: humanreaper_complete
      - source: endrun
        target: completed
        events: suicidemission_complete
      - source: infiltration, longwalk, tubes, final
        target: failed
        events: suicidemission_failed
      - source: failed
        target: ready
        events: reenable_suicidemission
