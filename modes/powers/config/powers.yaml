#config_version=5

#####
# Powers: Global (Non-Field)
#
# This mode enables (during recruitment missions) a "Super Jets" counter to
# replace the N7/IFF counter that's disabled during missions. Each bumper hit
# randomizes the powers on it or the other bumpers, and completing the count
# awards the active power on the bumper that completes.
#
# At any given time, a bumper can have one of three powers highlighted: its own
# (pure) power, or either hybrid powers with the other two bumpers. By extension,
# hybrid powers can appear on 2 bumpers but pure powers only on one. To balance
# this, the powers cycle through the pure power between each hybrid power.
#
# Powers are activated by holding both flippers for 2-3 seconds and can be used
# during any mode except the open field. Powers can NOT be activated when the
# last/only ball in play hits the outlane.

# ADRENALINE RUSH: Stop all timers for 15 seconds
# BIOTIC CHARGE: Instantly "hit" a random lit shot
# SINGULARITY: All lit lanes can be "hit" at standup targets
# TECH ARMOR: 10 second ball save
# COMBAT DRONE: Add-a-ball (takes 2s to activate)
# TACTICAL CLOAK: Holding one flipper, press the other to rotate lit shots
#
# In order to support the specialized shot behavior of singularity, biotic
# charge, and tactical cloak, this mode defines the core lane shots of the
# game. Every mode that allows powers must defer to these shots in order
# to function properly. The 'set_mission_shots' event on mode start is used
# to configure the shot behavior.
#####

mode:
  start_events: start_mode_powers
  stop_events: stop_mode_powers, stop_missions, mode_type_mission_stopped
  events_when_started: start_mode_frenzy
  events_when_stopped: stop_mode_frenzy
  priority: 800
  code: powers.Powers

event_player:
  # Enumerate each profile separately because they pass the state name as an arg
  cooldown_shot_tech_hit{current_player.power==" " and not device.counters.powers_cooldown.enabled}:
    award_power:
      power:
        value: (state)
        type: str
  cooldown_shot_biotic_hit{current_player.power==" " and not device.counters.powers_cooldown.enabled}:
    award_power:
      power:
        value: (state)
        type: str
  cooldown_shot_combat_hit{current_player.power==" " and not device.counters.powers_cooldown.enabled}:
    award_power:
      power:
        value: (state)
        type: str
  timer_activate_power_complete: activate_power
  # Coerce initial widgets
  enable_powers:
    show_awarded_power{current_player.power!=" "}:
      power:
        value: current_player.power
        type: str
  logicblock_powers_cooldown_updated:
    update_cooldown_progress:
      complete:
        type: int
        value: (1 - value / machine.base_cooldown) * 92  # Multiply by the height
  power_awarded: show_awarded_power
  # Placeholders make these events faster
  player_shot_cooldown_shot_biotic:
    - play_power_widget_singularity{value==0 or value==2}
    - play_power_widget_charge{value==1}
    - play_power_widget_armor{value==3}
  player_shot_cooldown_shot_combat:
    - play_power_widget_adrenaline{value==0 or value==2}
    - play_power_widget_cloak{value==1}
    - play_power_widget_charge{value==3}
  player_shot_cooldown_shot_tech:
    - play_power_widget_drone{value==0 or value==1}
    - play_power_widget_armor{value==1}
    - play_power_widget_cloak{value==3}
  show_awarded_power:
    - play_power_widget_(power)
  award_power:
    - play_power_widget_(power)

# Looking for variable_player? Probably in the python code
variable_player:
  power_shots_lit_hit: 
    score: 100
  power_shots_off_hit:
    score: 20
  frenzy_hit:
    score: 10

counters:
  powers_cooldown:
    # Start with a nice low number for easy debugging. Later, bump up to... 100?
    starting_count: machine.base_cooldown * (1 - current_player.research_cooldown_rate_perk)
    count_complete_value: 100
    direction: down
    count_events: frenzy_hit
    disable_on_complete: true
    enable_events:
      - mode_powers_started{current_player.power==" "}
    restart_events:
      - power_activation_success
    persist_state: true
    # Frenzy hits are a single increment. Pop hits are much more!
    control_events:
      - event: cooldown_shots_hit
        action: subtract
        value: 10

multiballs:
  combat_drone:
    ball_count: 1
    ball_count_type: add
    enable_events: power_awarded{power=="drone"}
    shoot_again: 1s
    start_events: enable_drone

timers:
  activate_power:
    start_value: 4
    end_value: 0
    tick_interval: 500ms
    direction: down
    control_events:
      - event: activate_power_hit
        action: restart
      - event: both_flippers_one
        action: stop
  power_active:
    # Starting value and start() of this timer are in powers.py
    start_value: 30
    tick_interval: current_player.research_tick_interval_perk
    end_value: 0
    direction: down

ball_saves:
  armor:
    enable_events: enable_armor
    auto_launch: true
    balls_to_save: 1
    active_time: 8s
    hurry_up_time: 2s
    grace_period: 1s
    early_ball_save_events: s_outlane_left_active, s_outlane_right_active

shot_groups:
  cooldown_shots:
    shots: cooldown_shot_tech, cooldown_shot_biotic, cooldown_shot_combat
    enable_events: mode_powers_started, power_activation_complete
    disable_events: power_awarded
  power_shots:
    shots: left_orbit, kickback, left_ramp, right_ramp, right_orbit
  singularity_shots:
    shots: singularity_left_orbit, singularity_kickback, singularity_left_ramp, singularity_right_ramp, singularity_right_orbit
    enable_events: enable_singularity
    disable_events: power_activation_complete, mode_powers_will_stop

shots:
  # All shots for the default modes that support powers
  left_ramp:
    hit_events: sh_left_ramp_hit, singularity_left_ramp_hit
    enable_events: enable_left_ramp
    disable_events: disable_left_ramp
    profile: lane_shot_profile
    show_tokens:
      leds: l_left_ramp_ring
    tags: envshot_left_ramp
  left_orbit:
    hit_events: sh_left_orbit_hit, singularity_left_orbit_hit
    enable_events: enable_left_orbit
    disable_events: disable_left_orbit
    profile: lane_shot_profile
    show_tokens:
      leds: l_left_orbit_ring
    tags: envshot_left_orbit
  right_ramp:
    hit_events: sh_right_ramp_hit, singularity_right_ramp_hit
    enable_events: enable_right_ramp
    disable_events: disable_right_ramp
    profile: lane_shot_profile
    show_tokens:
      leds: l_right_ramp_ring
    tags: envshot_right_ramp
  right_orbit:
    hit_events: sh_right_orbit_hit, singularity_right_orbit_hit
    enable_events: enable_right_orbit
    disable_events: disable_right_orbit
    profile: lane_shot_profile
    show_tokens:
      leds: l_right_orbit_ring
    tags: envshot_right_orbit
  kickback:
    hit_events: sh_kickback_hit, singularity_kickback_hit
    enable_events: enable_kickback
    disable_events: disable_kickback
    profile: lane_shot_profile
    show_tokens:
      leds: l_kickback_ring
    tags: envshot_kickback
  # Shots for power behaviors
  activate_power:
    enable_events:
      - award_power
      - mode_powers_started{current_player.power!=" "}
    hit_events: flipper_cancel
    disable_events: power_activation_success
  cooldown_shot_tech:
    switches: s_bumper_left
    profile: tech_powers
    advance_events:
      - cooldown_shot_tech_hit{device.counters.powers_cooldown.enabled}
  cooldown_shot_biotic:
    switches: s_bumper_right
    profile: biotic_powers
    advance_events:
      - cooldown_shot_biotic_hit{device.counters.powers_cooldown.enabled}
  cooldown_shot_combat:
    switches: s_bumper_bottom
    profile: combat_powers
    advance_events:
      - cooldown_shot_combat_hit{device.counters.powers_cooldown.enabled}
  singularity_left_orbit:
    switches: s_target1
    profile: singularity
    start_enabled: false
    persist_enable: false
    show_tokens:
      leds: l_standup_1
  singularity_kickback:
    switches: s_target2
    profile: singularity
    start_enabled: false
    persist_enable: false
    show_tokens:
      leds: l_standup_2
  singularity_left_ramp:
    switches: s_target3
    profile: singularity
    start_enabled: false
    persist_enable: false
    show_tokens:
      leds: l_standup_3
  singularity_right_ramp:
    switches: s_target4
    profile: singularity
    start_enabled: false
    persist_enable: false
    show_tokens:
      leds: l_standup_4
  singularity_right_orbit:
    switches: s_target5
    profile: singularity
    start_enabled: false
    persist_enable: false
    show_tokens:
      leds: l_standup_5

shot_profiles:
  combat_powers:
    advance_on_hit: false
    loop: true
    states:
      - name: adrenaline
      - name: cloak
      - name: adrenaline
      - name: charge
  tech_powers:
    advance_on_hit: false
    loop: true
    states:
      - name: drone
      - name: armor
      - name: drone
      - name: cloak
  biotic_powers:
    advance_on_hit: false
    loop: true
    states:
      - name: singularity
      - name: charge
      - name: singularity
      - name: armor
  singularity:
    states:
      - name: lit
        show: color_flashing_default
        priority: 1000
        show_tokens:
          color: color_barrier

show_player:
  ball_save_armor_enabled:
    ball_save_show:
      action: play
      speed: 3
  ball_save_armor_hurry_up:
    ball_save_show:
      action: play
      speed: 9
  ball_save_armor_disabled:
    ball_save_show:
      action: stop
  show_awarded_power:
    led_color:
      key: current_power_show
      show_tokens:
        leds: (power)
        color: BBBBBB
  power_activation_success:
    color_flashing_fast:
      key: current_power_show
      show_tokens:
        leds: (power)
        color: DDDDDD
  power_activation_complete:
    current_power_show:
      action: stop
  mode_powers_will_stop:
    current_power_show:
      action: stop

flasher_player:
  play_power_widget_singularity:
    l_power_singularity: 250ms
  play_power_widget_adrenaline:
    l_power_adrenaline: 250ms
  play_power_widget_drone:
    l_power_drone: 250ms
  play_power_widget_cloak:
    l_power_cloak: 250ms
  play_power_widget_charge:
    l_power_charge: 250ms
  play_power_widget_armor:
    l_power_armor: 250ms

slide_player:
  power_awarded:
    power_awarded_slide:
      expire: 4s
  power_activation_success:
    power_active_slide:
      target: lcd_right
      priority: 2000
  power_activation_complete:
    power_active_slide:
      target: lcd_right
      action: remove

slides:
  power_awarded_slide:
    - type: text
      text: Power Available!
      style: header_xs, row_top, row_dmd_bottom, col_left_anchor
      color: fbc795  # color_ui_orange
    - type: text
      text: (power_name)
      style: header_sm, row_super, col_left_anchor
      color: 2adb23  # color_ui_green_strong
    - type: text
      text: (description)
      style: header_md, row_main_under
      color: ffffff
    - type: text
      text: "Hold both flippers 2s to activate"
      style: body_xs, row_bottom, col_left_anchor
      color: f3dc90  # color_ui_yellow
    - widget: power_widget_(power)
    - widget: background_console
  power_active_slide:
    - widget: portrait_power_(power)_active

widget_player:
  show_cooldown:
    power_widget_mask:
      action: add
    power_cooldown_widget:
      action: add
    power_widget_highlight:
      action: remove
  show_awarded_power:
    power_widget_mask:
      action: remove
    power_cooldown_widget:
      action: remove
  slide_power_awarded_slide_removed:
    power_widget_highlight:
      action: add
  mode_powers_will_stop:
    power_available_widget:
      action: remove
  power_activation_complete:
    power_available_widget:
      action: remove
    power_widget_highlight:
      action: remove
    power_widget:
      action: remove
  # Widgets per power
  play_power_widget_singularity:
    power_widget_singularity:
      key: power_widget
      action: update
      priority: 2
  play_power_widget_charge:
    power_widget_charge:
      key: power_widget
      action: update
      priority: 1
  play_power_widget_armor:
    power_widget_armor:
      key: power_widget
      action: update
      priority: 3
  play_power_widget_adrenaline:
    power_widget_adrenaline:
      key: power_widget
      action: update
      priority: 5
  play_power_widget_cloak:
    power_widget_cloak:
      key: power_widget
      action: update
      priority: 4
  play_power_widget_drone:
    power_widget_drone:
      key: power_widget
      action: update
      priority: 8
  timer_activate_power_started:
    power_activating_countdown_widget:
      action: add
      target: main
  timer_activate_power_stopped:
    power_activating_countdown_widget:
      action: remove
      target: main

widgets:
  power_widget_mask:
    - type: image
      image: power_mask
      style: power_mask_badge, col_right_anchor
  power_widget_highlight:
    - type: image
      image: power_mask_highlight
      style: power_mask_badge, col_right_anchor
      animations:
        add_to_slide: pulse_power_highlight
  power_cooldown_widget:
    - type: rectangle
      color: d1c1bb
      style: power_cooldown_badge, col_right_anchor
      opacity: 0.8
      width: 153
      height: 0
      animations:
        add_to_slide: pulse_power_cooldown
        update_cooldown_progress: power_cooldown_complete, pulse_power_cooldown
  power_widget_adrenaline:
    - type: image
      image: power_adrenaline
      style: power_badge, col_right_anchor
      opacity: 0.5
      animations:
        power_awarded:
          - property: opacity
            value: 1
  power_widget_cloak:
    - type: image
      image: power_cloak
      style: power_badge, col_right_anchor
      opacity: 0.5
      animations:
        power_awarded:
          - property: opacity
            value: 1
  power_widget_drone:
    - type: image
      image: power_drone
      style: power_badge, col_right_anchor
      opacity: 0.5
      animations:
        power_awarded:
          - property: opacity
            value: 1
  power_widget_charge:
    - type: image
      image: power_charge
      style: power_badge, col_right_anchor
      opacity: 0.5
      animations:
        power_awarded:
          - property: opacity
            value: 1
  power_widget_armor:
    - type: image
      image: power_armor
      style: power_badge, col_right_anchor
      opacity: 0.5
      animations:
        power_awarded:
          - property: opacity
            value: 1
  power_widget_singularity:
    - type: image
      image: power_singularity
      style: power_badge, col_right_anchor
      opacity: 0.5
      animations:
        power_awarded:
          - property: opacity
            value: 1
  portrait_power_adrenaline_active:
    - type: text
      text: Power Active
      style: header_xs, row_top
    - type: text
      text: "Adrenaline\nRush"
      style: header_sm, row_main
    - type: text
      text: "All timers stopped\nfor 10 seconds"
      style: body_sm, row_sub_under
    - type: image
      image: portrait_power_adrenaline_active
  portrait_power_armor_active:
    - type: text
      text: Power Active
      style: header_xs, row_top
    - type: text
      text: "Tech\nArmor"
      style: header_sm, row_main
    - type: text
      text: "Ball save for\n20 seconds"
      style: body_sm, row_sub_under
    - type: image
      image: portrait_power_armor_active
  portrait_power_charge_active:
    - type: text
      text: Power Active
      style: header_xs, row_top
    - type: text
      text: "Biotic\nCharge"
      style: header_sm, row_main
    - type: text
      text: "Hitting a shot\nat random!"
      style: body_sm, row_sub_under
    - type: image
      image: portrait_power_charge_active
  portrait_power_cloak_active:
    - type: text
      text: Power Active
      style: header_xs, row_top
    - type: text
      text: "Tactical\nCloak"
      style: header_sm, row_main
    - type: text
      text: "Use flippers to\nrotate shots!"
      style: body_sm, row_sub_under
    - type: image
      image: portrait_power_cloak_active
  portrait_power_drone_active:
    - type: text
      text: Power Active
      style: header_xs, row_top
    - type: text
      text: "Combat\nDrone"
      style: header_sm, row_main
    - type: text
      text: "Add-a-ball is\nactivated!"
      style: body_sm, row_sub_under
    - type: image
      image: portrait_power_drone_active
  portrait_power_singularity_active:
    - type: text
      text: Power Active
      style: header_xs, row_top
    - type: text
      text: "Singularity"
      style: header_sm, row_main
    - type: text
      text: "Target hits count\nas lane hits!"
      style: body_sm, row_sub_under
    - type: image
      image: portrait_power_singularity_active

sound_player:
  power_activation_failure{power=="charge" or power=="cloak"}: shepard_power_failure_target
  power_activation_failure{power!="charge" and power!="cloak"}: shepard_power_failure_general

sound_pools:
  shepard_power_failure_general:
    sounds: shepard_need_a_second, shepard_not_ready_yet, shepard_cant_do_it_yet
    track: voice
  shepard_power_failure_target:
    sounds: shepard_cant_reach_target_1, shepard_cant_reach_target_2, shepard_cant_reach_target_3
    track: voice

sounds:
  # These three sounds are in global_recruit
  shepard_cant_reach_target_1:
    file: en_us_player_f_ss_global_player_female_00333954_f.ogg
    track: voice
  shepard_cant_reach_target_2:
    file: en_us_player_f_ss_global_player_female_00333957_f.ogg
    track: voice
  shepard_cant_reach_target_3:
    file: en_us_player_f_ss_global_player_female_00333959_f.ogg
    track: voice
  shepard_cant_do_it_yet:
    file: en_us_player_f_ss_global_player_female_00334010_f.ogg
    track: voice
  shepard_need_a_second:
    file: en_us_player_f_ss_global_player_female_00334012_f.ogg
    track: voice
  shepard_not_ready_yet:
    file: en_us_player_f_ss_global_player_female_00334014_f.ogg
    track: voice
  shepard_locked_on:
    file: en_us_player_f_ss_global_player_female_00288362_f.ogg
    track: voice
  shepard_attack_long_1:
    file: en_us_player_f_ss_global_player_female_00333967_f.ogg
    track: voice
  shepard_attack_long_2:
    file: en_us_player_f_ss_global_player_female_00333968_f.ogg
    track: voice
  shepard_attack_long_3:
    file: en_us_player_f_ss_global_player_female_00333969_f.ogg
    track: voice
