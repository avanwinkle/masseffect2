#config_version=5

#####
# SUICIDE MISSION: BASE MODE
#
# This is the mode handler for the Suicide Mission, responsible for starting and
# stopping the various sub-modes of the game finale.
#
#####

mode:
  start_events: start_mode_suicide_base
  stop_events: suicidemission_complete, suicidemission_failed, suicidemission_ended
  events_when_started: mode_type_wizard_started, enable_fullorbit, start_mode_harbinger
  events_when_stopped: mode_type_wizard_stopped, stop_mode_harbinger
  code: suicide_base.SuicideBase
  priority: 2000

config:
  - suicide_sounds.yaml
  - suicide_sound_pools.yaml
  - suicide_slides.yaml

event_player:
  mode_suicide_base_started.1:
    - start_mode_suicide_omegarelay{device.achievements.omegarelay.state!="completed"}
    # Everything between omegarelay and endrun starts with the huddle
    - start_mode_suicide_huddle{device.achievements.omegarelay.state=="completed" and device.achievements.humanreaper.state!="completed"}
          # - play_platforms_intro{device.achievements.longwalk.state=="completed" and device.achievements.humanreaper.state!="completed"}
    - start_mode_suicide_endrun{device.achievements.humanreaper.state=="completed" and device.achievements.endrun.state!="completed"}
  # Wait for the mission selection of a specialist before starting infiltration or long walk
  suicide_huddle_complete:
    - start_mode_suicide_infiltration{device.achievements.infiltration.state!="completed"}
    - start_mode_suicide_longwalk{device.achievements.infiltration.state=="completed" and device.achievements.longwalk.state!="completed"}
    - start_mode_suicide_tubes{device.achievements.longwalk.state=="completed" and device.achievements.tubes.state!="completed"}
    - start_mode_suicide_platforms{device.achievements.tubes.state=="completed" and device.achievements.humanreaper.state!="completed"}
  # Progression
  omegarelay_complete: start_mode_suicide_huddle
  # achievement_infiltration_state_completed: start_mode_suicide_huddle  # Use the achievement state because that's what mission select checks
  # platform_intro_complete: start_mode_suicide_platforms|4s # Delay for the dialog
  platforms_complete: start_mode_suicide_humanreaper
  # reaper goes back to platforms when it "fails"
  humanreaper_failed: start_mode_suicide_platforms
  humanreaper_complete: start_mode_suicide_endrun
  endrun_complete:
    - levelup
    - suicidemission_complete
  # Remember the score before starting the suicide mission, in case it fails
  mode_suicide_base_started.2{current_player.presuicide_score==0}:
    presuicide_score:
      action: set
      int: current_player.score
  # We don't end on ball_ending for the queue player, so trigger that here
  # TODO: move all the post-drain queue logic into the custom code and avoid the relay player?
  ball_ending{not mode.suicide_infltration.active and not mode.suicide_longwalk.active}: suicidemission_ended
  # Slide player doesn't like events, so conditionally restore the main slide
  suicidemission_ended:
    - restore_singleplayer_slide{game.num_players==1}
    - restore_multiplayer_slide{game.num_players>1}
  squadmate_killed{not ball_is_ending and device.achievements.longwalk.state!="completed"}: start_mode_suicide_restart
  # We play the reaper -> platforms sound here so we can control it for hit-based changes only
  reaper_shot_hit:
    - play_enemies_incoming{current_player.reaper_rounds > 0 and current_player.reaper_rounds % 2 == 0}
    - play_enemies_reinforcements{current_player.reaper_rounds % 2 == 1}
  # Also play the sound if the reaper mode ends of its own accord
  humanreaper_timeout:
    - play_enemies_incoming{current_player.reaper_rounds > 0 and current_player.reaper_rounds % 2 == 0}
    - play_enemies_reinforcements{current_player.reaper_rounds % 2 == 1}

queue_relay_player:
  # If we're starting a new ball and need to huddle, delay the ball eject
  balldevice_bd_trough_ball_eject_attempt{mode.suicide_huddle.active}:
    post: huddle_waitforit
    wait_for: suicide_huddle_complete
  # If the ball drains during infiltration or longwalk, kill the specialist too
  ball_ending{mode.suicide_infiltration.active or mode.suicide_longwalk.active}:
    post: kill_squadmate
    args:
      squadmate: specialist
    wait_for: squadmate_killed_complete # TODO: change this to a post-sound-effect event

ball_saves:
  omegarelay_save:
    enable_events: multiball_omegarelay_ended
    only_last_ball: true
    delayed_eject_events: mode_suicide_infiltration_started
    auto_launch: true # Must be true because we have a multiball starting too

variable_player:
  # Track whether we are progressing into a mode or starting a new ball
  mode_suicide_base_started:
    suicide_continuing:
      action: set
      int: 1 # 1 for testing intros, 0 for skipping them
    # For debugging, when we start directly into reaper mode
    reaper_hp{not current_player.reaper_hp}:
      action: set
      int: 10000
  # Reset the reaper ROUNDS and HP on each ball? or each suicide mission?
  mode_suicide_longwalk_started:
    reaper_rounds:
      action: set
      int: 1
    # Human Reaper hit points... 100,000?
    reaper_hp:
      action: set
      int: 100000
  kill_specialist:
    suicide_continuing:
      action: set
      int: 0
  kill_squadmate:
    suicide_continuing:
      action: set
      int: 0
  omegarelay_complete:
    suicide_continuing: 1
  infiltration_complete:
    suicide_continuing: 1
  longwalk_complete:
    suicide_continuing: 1
  humanreaper_complete:
    suicide_continuing: 1
  mode_suicide_humanreaper_started:
    reaper_rounds: 1
